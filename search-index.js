var searchIndex = JSON.parse('{\
"cache":{"doc":"","t":[17,17,3,17,17,3,17,3,3,17,12,12,12,12,11,11,11,11,11,11,11,11,0,0,11,11,11,11,0,11,11,11,11,11,11,11,11,0,5,0,0,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,3,4,13,7,17,11,11,11,11,12,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,0,11,11,5,5,5,3,7,17,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,5,5,5,4,6,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,7,3,17,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,0,11,5,5,5,5,5,5,7,17,3,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,17,5,5,5,5,5,5,5,5,5,5,5,5,5],"n":["BUCKET_EXPIRY_OFFSET","HIT_PER_SECOND","ID","PKG_NAME","PKG_VERSION","PREFIX_BUCKET","PREFIX_BUCKET_TIMER","PREFIX_CAPTCHA","PREFIX_CHALLENGE","PREFIX_SAFETY","__private_field","__private_field","__private_field","__private_field","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bucket","challenge","deref","deref","deref","deref","errors","from","from","from","from","into","into","into","into","mcaptcha","on_delete","redis","safety","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","utils","vzip","vzip","vzip","vzip","Bucket","Format","Json","MCAPTCHA_BUCKET_TYPE","REDIS_MCAPTCHA_BUCKET_TYPE_VERSION","borrow","borrow","borrow_mut","borrow_mut","bucket_instant","clone","clone_into","counter_create","decrement","decrement","decrement_runner","deserialize","eq","fmt","fmt","from","from","from_str","increment","increment_by","into","into","new","on_delete","parse_str","serialize","timer","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","type_methods","vzip","vzip","free","rdb_load","rdb_save","Challenge","MCAPTCHA_CHALLENGE_TYPE","MCAPTCHA_CHALLENGE_VERSION","borrow","borrow_mut","create_challenge","delete_challenge","deserialize","from","get_challenge","into","new","serialize","try_from","try_into","type_id","type_methods","vzip","free","rdb_load","rdb_save","CacheError","CacheResult","CaptchaNotFound","ChallengeNotFound","DuplicateChallenge","Msg","RedisError","borrow","borrow_mut","fmt","fmt","from","from","from","from","from","from","from","into","new","to_string","try_from","try_into","type_id","vzip","MCAPTCHA_MCAPTCHA_TYPE","MCaptcha","REDIS_MCPATCHA_MCAPTCHA_TYPE_VERSION","add_captcha","add_captcha_runner","add_visitor","borrow","borrow_mut","captcha_exists","captcha_exists_runner","decrement_visitor_by","delete_captcha","delete_captcha_runner","deserialize","from","get_add_visitor_result","get_count","get_difficulty","get_duration","get_mcaptcha","get_mut_mcaptcha","get_visitors","into","m","new","rename","serialize","try_from","try_into","type_id","type_methods","vzip","free","rdb_load","rdb_save","RedisModule_OnLoad","RedisModule_OnUnload","__info_func","MCAPTCHA_SAFETY_TYPE","MCAPTCHA_SAFETY_VERSION","MCaptchaSafety","boost","borrow","borrow_mut","deserialize","from","into","new","on_delete","serialize","set_timer","try_from","try_into","type_id","type_methods","vzip","SAFETY_RDB_VAL","free","rdb_load","rdb_save","get_bucket_instant","get_bucket_name","get_bucket_name_from_timer_name","get_captcha_key","get_challenge_name","get_mcaptcha_from_safety","get_safety_name","get_timer_name_from_bucket_name","is_bucket_timer","is_mcaptcha_safety"],"q":["cache","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","cache::bucket","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","cache::bucket::type_methods","","","cache::challenge","","","","","","","","","","","","","","","","","","cache::challenge::type_methods","","","cache::errors","","","","","","","","","","","","","","","","","","","","","","","","","cache::mcaptcha","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","cache::mcaptcha::type_methods","","","cache::redis","","","cache::safety","","","","","","","","","","","","","","","","","","cache::safety::type_methods","","","","cache::utils","","","","","","","","",""],"d":["If buckets perform clean up at x instant, then buckets …","Initial allocation amount of bucketbucket::Bucket","node unique identifier, useful when running in cluster mode","","","bucket key prefix","bucket timer key prefix","counter/captcha key prefix","","","","","","","","","","","","","","","Leaky bucket algorithm is implemantation for mcatpcha …","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Custom datastructure that controls mCaptcha lifetime …","","","","","","","","","","","","","","","","","","","encoding formats for persistence","","","Bucket type version, aka encoding version","","","","","instant(seconds from UNIX_EPOCH) at which time bucket …","","","Create new counter","executes when timer goes off. Decrements all registered …","a list of captcha keys that should be decremented during …","decrement runner that decrements all registered counts …","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","increments count of key = captcha and registers for auto …","open bucket, set decrement by specified number","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","creates new bucket and sets off timer to go off at <code>duration</code>","Run when bucket timer expired at BUCKET_EXPIRY_OFFSET. …","","","timer ID","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","Add captcha to redis","","increments the visitor count by one","","","check if captcha exists","","decrement MCaptcha’s current visitor_threshold by …","delete captcha","","","Returns the argument unchanged.","","Get counter value","get current difficulty factor","get MCaptcha’s lifetime","get mcaptcha from redis key","get mcaptcha from redis key writable","get MCaptcha’s current visitor_threshold","Calls <code>U::from(self)</code>.","","","implements mCaptcha rename: clones configuration from old …","","","","","","","","","","","","","","","","executes when timer goes off. Refreshes expiry timer and …","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","When safety is deleted due to expiration, if mcaptcha …","","","","","","","","","","","","","duration in seconds","duration in seconds","","","","","duration in seconds","",""],"i":[0,0,0,0,0,0,0,0,0,0,1,3,5,6,1,3,5,6,1,3,5,6,0,0,1,3,5,6,0,1,3,5,6,1,3,5,6,0,0,0,0,1,3,5,6,1,3,5,6,1,3,5,6,0,1,3,5,6,0,0,18,0,0,18,12,18,12,12,12,12,12,12,12,12,12,18,18,12,18,12,18,12,12,18,12,12,12,18,12,12,12,18,12,18,12,18,12,0,18,12,0,0,0,0,0,0,28,28,28,28,28,28,28,28,28,28,28,28,28,0,28,0,0,0,0,0,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,0,0,0,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,0,33,0,0,0,0,0,0,0,0,0,43,43,43,43,43,43,43,43,43,43,43,43,43,0,43,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[1,2],[3,4],[5,4],[6,4],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[7,8,9,9]],0,0,[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],11],[[],11],[[],11],[[],11],0,[[]],[[]],[[]],[[]],0,0,0,0,0,[[]],[[]],[[]],[[]],0,[12,12],[[]],[[7,[14,[13]]],15],[[7,16]],0,[[7,17]],[[],[[10,[12]]]],[[18,18],19],[[18,20],21],[[12,20],21],[[]],[[]],[[18,9],[[10,[22,23]]]],[[7,9],[[10,[4,23]]]],[[7,24],[[10,[23]]]],[[]],[[]],[[7,16],[[10,[12,23]]]],[[7,8,9,9]],[[18,9],[[10,[22,23]]]],[12,10],0,[[]],[[],10],[[],10],[[],10],[[],10],[[],11],[[],11],0,[[]],[[]],[25],[[26,27],25],[[26,25]],0,0,0,[[]],[[]],[[7,[14,[13]]],15],[[7,[14,[13]]],15],[[],[[10,[28]]]],[[]],[[7,[14,[13]]],15],[[]],[[16,24],28],[28,10],[[],10],[[],10],[[],11],0,[[]],[25],[[26,27],25],[[26,25]],0,0,0,0,0,0,0,[[]],[[]],[[23,20],21],[[23,20],21],[29,23],[9,23],[4,23],[30,23],[31,23],[32,23],[[]],[[]],[4,23],[[],4],[[],10],[[],10],[[],11],[[]],0,0,0,[[7,[14,[13]]],15],[[7,9,33],15],[33],[[]],[[]],[[7,[14,[13]]],15],[34,19],[[33,24]],[[7,[14,[13]]],15],[[7,9],15],[[],[[10,[33]]]],[[]],[33,35],[[7,[14,[13]]],15],[33,24],[33,16],[34,[[10,[[36,[33]],23]]]],[17,[[10,[[36,[33]],23]]]],[33,24],[[]],0,[37,[[10,[33,23]]]],[[7,[14,[13]]],15],[33,10],[[],10],[[],10],[[],11],0,[[]],[25],[[26,27],25],[[26,25]],[[38,39,40],40],[38,40],[[41,42]],0,0,0,[7],[[]],[[]],[[],[[10,[43]]]],[[]],[[]],[[7,16,9],[[10,[23]]]],[[7,8,9,9]],[43,10],[[7,17],[[10,[23]]]],[[],10],[[],10],[[],11],0,[[]],0,[25],[[26,27],25],[[26,25]],[16,[[10,[16,23]]]],[16,4],[9,[[36,[9]]]],[[],4],[[9,9],4],[9,[[36,[9]]]],[9,4],[9,4],[9,19],[9,19]],"p":[[3,"ID"],[15,"usize"],[3,"PREFIX_CAPTCHA"],[3,"String"],[3,"PREFIX_BUCKET"],[3,"PREFIX_CHALLENGE"],[3,"Context"],[3,"NotifyEvent"],[15,"str"],[4,"Result"],[3,"TypeId"],[3,"Bucket"],[3,"RedisString"],[3,"Vec"],[6,"RedisResult"],[15,"u64"],[3,"RedisKeyWritable"],[4,"Format"],[15,"bool"],[3,"Formatter"],[6,"Result"],[8,"Deserialize"],[4,"CacheError"],[15,"u32"],[6,"c_void"],[3,"RedisModuleIO"],[6,"c_int"],[3,"Challenge"],[3,"ParseIntError"],[3,"Error"],[4,"RedisError"],[4,"CaptchaError"],[3,"MCaptcha"],[3,"RedisKey"],[3,"AddVisitorResult"],[4,"Option"],[3,"CreateMCaptcha"],[3,"RedisModuleCtx"],[3,"RedisModuleString"],[6,"c_int"],[3,"RedisModuleInfoCtx"],[15,"i32"],[3,"MCaptchaSafety"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
