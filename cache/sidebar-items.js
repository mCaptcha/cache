initSidebarItems({"constant":[["BUCKET_EXPIRY_OFFSET","If buckets perform clean up at x instant, then buckets themselves will get cleaned up at x + BUCKET_EXPIRY_OFFSET(if they haven’t already been cleaned up)"],["HIT_PER_SECOND","Initial allocation ammount of bucket[bucket::Bucket]"],["PKG_NAME",""],["PKG_VERSION",""],["PREFIX_BUCKET_TIMER","bucket timer key prefix"],["PREFIX_SAFETY",""]],"fn":[["on_delete",""]],"mod":[["bucket","Leaky bucket algorithim is implemantation for mcatpcha using batch processing Everytime count is increased for an mcaptcha object, a decrement job is added to a batch that is scheduled to be executed at that mcaptcha object’s expiry rate(MCaptcha.get_duration())"],["challenge",""],["errors",""],["mcaptcha",""],["redis",""],["safety","Custom datastructure that controls mCaptcha lifetime through it’s expiration event handler and callbacks"],["utils",""]],"struct":[["ID","node unique identifier, useful when running in cluster mode"],["PREFIX_BUCKET","bucket key prefix"],["PREFIX_CAPTCHA","counter/captcha key prefix"],["PREFIX_CHALLENGE",""]]});